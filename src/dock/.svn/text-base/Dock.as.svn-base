package dock {  import flash.display.*;  import flash.events.*;  import flash.net.URLLoader;  import flash.net.URLRequest;  import flash.events.ErrorEvent;  import flash.events.MouseEvent;  import flash.filters.DropShadowFilter;  import flash.text.TextField;  import flash.geom.ColorTransform;  import gs.TweenLite;	  import visor.lt.uza.utils.*;  public class Dock extends Sprite{    public var $:Global = Global.init();    private var dockItems:Array = new Array();    private var mOS:OS;    private var testColour:uint = 0x554311;    private var itemText:TextField = new TextField();    private var _itemTag : ItemNameTag = new ItemNameTag();    public function Dock(myOS:OS){      mOS = myOS;      update();      mouseChildren = false;      itemText.selectable = false;      addChild(_itemTag);      addEventListener(MouseEvent.MOUSE_MOVE, onMouseOver);      addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);      addEventListener(MouseEvent.MOUSE_UP, onMouseUp);      addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);      var item:DockItem = new DockItem();      item.x = 0;      item.itemName = "finder";      item.draw();      addChild(item);      dockItems.push(item)        item = new DockItem();      item.x = 64;      item.itemName = "mail";      item.draw();      addChild(item);      dockItems.push(item)        item = new DockItem();      item.x = 128;      item.itemName = "addressbook";      item.draw();      addChild(item);      dockItems.push(item)        item = new DockItem();      item.x = 192;      item.itemName = "safari";      item.draw();      addChild(item);      dockItems.push(item)        item = new DockItem();      item.x = 256;      item.itemName = "mail";      item.draw();      addChild(item);      dockItems.push(item)        item = new DockItem();      item.x = 312;      item.itemName = "addressbook";      item.draw();      addChild(item);      dockItems.push(item);    }    public function update():void{      var i:int = 1;      for each(var app:String in mOS.listOfApps){        if(app != "null" && app != "finder"){          var item:DockItem = new DockItem();          item.x = 64 * i;          item.itemName = app;          item.draw();          addChild(item);          dockItems.push(item)            i++;        }      }          }		        private function onMouseDown(event:MouseEvent):void {			      var mouseX:Number = event.localX;      var temp:Number = mouseX;      for (var i:int = 0; true; i++){        temp -= (dockItems[i].scaleX * 128);        if(temp <= 0){          $.trace2(dockItems[i].itemName + " clicked");          dockItems[i].transform.colorTransform = new ColorTransform(1, 1, 1, 1, -60, -60, -60, 0);          break;        }      }    }    private function onMouseOver(event:MouseEvent):void {			      var centerItemIndex:int = 0;      var mouseX:Number = event.localX;      var temp:Number = mouseX;      for (centerItemIndex; true; centerItemIndex++){        temp -= (dockItems[centerItemIndex].scaleX * 128);        if(temp <= 0){          //found selected icons          _itemTag.itemName = dockItems[centerItemIndex].itemName;          _itemTag.x = dockItems[centerItemIndex].x + (64 * dockItems[centerItemIndex].scaleX);          _itemTag.y = -1 * (64 * dockItems[centerItemIndex].scaleY) - 30;          _itemTag.draw();          break;        }      }      var TOTAL_PIXELS_OF_CURVE:Number = 500;      var TOTAL_PIXELS_OF_CURVE_DIV_TWO:Number = TOTAL_PIXELS_OF_CURVE / 2;      var dockLength:Number = dockItems.length;       var xPush:int = 0;      for (var i:int = 0; i < dockLength; i++){        dockItems[i].transform.colorTransform = new ColorTransform(1, 1, 1, 1, 0, 0, 0, 0);        var currentItem:DockItem = dockItems[i];        var distanceFromMouseX:Number = (currentItem.x + 32) - mouseX;        if(distanceFromMouseX < 0) distanceFromMouseX *= -1;        if(distanceFromMouseX < (TOTAL_PIXELS_OF_CURVE_DIV_TWO ) ){          distanceFromMouseX = ((distanceFromMouseX / TOTAL_PIXELS_OF_CURVE_DIV_TWO) * 90) + 90;          var radians:Number = distanceFromMouseX * Math.PI/180;          var newScale:Number = Math.sin(radians);          if(newScale > 1) newScale = 1;          if(newScale < 0.5) newScale = 0.5;          currentItem.scaleY = newScale;          currentItem.scaleX = newScale;          currentItem.y = 64 + (newScale * -128);          currentItem.x = xPush;          xPush += (newScale * 128);        }else{          currentItem.x = xPush;          xPush += 64;        }      }    }    private function onMouseOut(event:MouseEvent):void	{      for(var i:int; i < dockItems.length; i++){ 				        dockItems[i].scaleX = 0.5;        dockItems[i].scaleY = 0.5;        dockItems[i].y = 0;        dockItems[i].x = i*64;        dockItems[i].transform.colorTransform = new ColorTransform(1, 1, 1, 1, 0, 0, 0, 0);      }      _itemTag.x = -400;    }    private function onMouseUp(event:MouseEvent):void	{      for(var i:int; i < dockItems.length; i++){ 				        dockItems[i].transform.colorTransform = new ColorTransform(1, 1, 1, 1, 0, 0, 0, 0);                }    }  }}