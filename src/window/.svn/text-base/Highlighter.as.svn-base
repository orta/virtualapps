/**   *	purely cosmetic class for showing the area that you can click on   *     *   *	@langversion ActionScript 3.0   *	@playerversion Flash 9.0   *   *	@author orta   *	@since  2008-06-14   */package window{  import flash.display.Sprite;  import flash.display.Graphics;  import flash.events.MouseEvent;  import flash.events.TimerEvent;  import flash.text.TextField;  import flash.utils.*;  import flash.filters.DropShadowFilter;  public class Highlighter extends Sprite {    public var mColour:uint;    public var mAlpha:Number;    public var myText:String;    public var mBorder:Number = 0;    private var mTimer:Timer;    private var addAlpha:Number;    public function Highlighter(w:Number, h:Number, input:String, colour:uint = 0xbbcfeb) {      width = w;      height = h;      mAlpha = 0.02;      mColour = colour;      useHandCursor = true;      buttonMode = true;      mTimer = new Timer(30);      if(input != null)      {        myText = input;       }      else{        myText = "";      }      drawme();      mTimer.addEventListener("timer", onTime);      addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);      addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);    }    private function onMouseOver(event:MouseEvent):void    {			      addAlpha = 0.05;      mTimer.start();			    }    private function onMouseOut(event:MouseEvent):void    {      addAlpha = -0.05;    }    private function onTime(eventArgs:TimerEvent):void    {        //simple tweenings      if( ( mAlpha + addAlpha) > 0.6 )       {        return;      }      if( (mAlpha + addAlpha) < 0.0 )       {        mTimer.stop();      }      mAlpha += addAlpha;      drawme();    }    public function drawme():void    {      graphics.clear();      graphics.lineStyle(1,0, mBorder);      graphics.beginFill(mColour, mAlpha); 			      graphics.lineTo(width,0);      graphics.lineTo(width,height);      graphics.lineTo(0,height);      graphics.lineTo(0,0);      graphics.endFill();    }    public function addText():void    {			      var textBit:TextField = new TextField();      textBit.text = myText;      textBit.selectable = false;      addChild(textBit);      textBit.filters = [new DropShadowFilter(0.2, 0, 1, 0.5, 1, 1, 1, 1)];    }		    public function removeText():void    {	      while(numChildren != 0){        removeChildAt(0);      }    }  }}