//this class is purely cosmetic, if you want to find the button code// its over in orWindow onmousedownpackage {	import flash.display.Sprite;	import flash.display.Graphics;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.text.TextField;	import flash.utils.*;	import flash.filters.DropShadowFilter;	public class Highlighter extends Sprite {				var mColour:uint;		var mAlpha:Number;		var wi:Number;		var he:Number;		var addAlpha:Number;		var mTimer:Timer;		var myText:String;		var mBorder:Number = 0;						public function Highlighter(w:Number, h:Number, input:String, colour:uint = 0xbbcfeb) {			wi = w;			he = h;			mAlpha = 0.02;			mColour = colour;			useHandCursor = true;			buttonMode = true;			mTimer = new Timer(30);			if(input != null)			{				myText = input; 			}			else{				myText = "";			}			drawme();						mTimer.addEventListener("timer", onTime);			addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);			addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);					}				private function onMouseOver(event:MouseEvent):void		{						addAlpha = 0.05;			mTimer.start();					}				private function onMouseOut(event:MouseEvent):void		{			addAlpha = -0.05;		}				private function onTime(eventArgs:TimerEvent)		{  		  //simple tweenings			if( ( mAlpha + addAlpha) > 0.6 ) 			{				return;			}			if( (mAlpha + addAlpha) < 0.0 ) 			{				 mTimer.stop();			}			mAlpha += addAlpha;			drawme();		}				public function drawme()		{			graphics.clear();			graphics.lineStyle(1,0, mBorder);			graphics.beginFill(mColour, mAlpha); 						graphics.lineTo(wi,0);			graphics.lineTo(wi,he);			graphics.lineTo(0,he);			graphics.lineTo(0,0);			graphics.endFill();		}				public function addText()		{							var textBit:TextField = new TextField();				textBit.text = myText;				textBit.selectable = false;				addChild(textBit);				textBit.filters = [new DropShadowFilter(0.2, 0, 1, 0.5, 1, 1, 1, 1)];				}				public function removeText()		{				while(numChildren != 0){				removeChildAt(0);			}		}	}}