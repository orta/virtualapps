package {  import flash.geom.Rectangle;  import flash.geom.Point;  import flash.display.*;  import flash.display.Bitmap;  import flash.display.BitmapData;  import flash.filters.BlurFilter;  import flash.utils.*;  import flash.events.TimerEvent;  import window.Window;  public class BlurBG extends Sprite{		    public var mOS:OS;    public var size:Rectangle    = new Rectangle();    public var mWindow: Window;    public var startPoint: Point = new Point(0,0);    private var mTimer:Timer     = new Timer(1);    public function BlurBG(inWin:Window, inSize:Rectangle, backgnd:OS) {      mOS                        = backgnd;      size                       = inSize;      mWindow                    = inWin;      size.x -= 50;      updateBlur();      mTimer.addEventListener("timer", onTime);    }    public function startTimer():void{      mTimer.start();			    }    public function stopTimer():void{      mTimer.stop();			    }    private function onTime(eventArgs:TimerEvent):void{      updateBlur();    }    public function updateBlur():void{      if(numChildren) {         // no ghosting thanks        removeChild(getChildAt(0));       }      var theRect:Rectangle        = mWindow.getRect(mOS);      var rect:Rectangle           = new Rectangle(x,y,width,height);      var osBG:BitmapData          = new BitmapData(mOS.width, mOS.height, true, 0xffffff);      mWindow.visible              = false;      osBG.draw(mOS);                       // grab OS Background      mWindow.visible              = true;      var myBitties:BitmapData     = new BitmapData(width, height, true, 0xffffff);      var blur:BlurFilter          = new BlurFilter();      myBitties.applyFilter(osBG, rect, startPoint, blur);      var bg:Bitmap                = new Bitmap(myBitties);      addChild(bg);       filters  = [blur]; // blur the copied rect and add as child    }		  }}